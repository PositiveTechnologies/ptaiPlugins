plugins {
    id 'java-library'
    id 'java-test-fixtures'
}

group = "${rootGroup}"

dependencies {
    api project(':ptai-data-structures')
    api project(':ptai-rest-api')

    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    implementation 'org.apache.commons:commons-compress:1.21'
    // Need this to work with 7zip compression
    // https://mvnrepository.com/artifact/org.tukaani/xz
    implementation 'org.tukaani:xz:1.9'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.6'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    implementation 'commons-validator:commons-validator:1.6'
    // https://mvnrepository.com/artifact/org.apache.ant/ant
    implementation 'org.apache.ant:ant:1.10.9'
    // https://mvnrepository.com/artifact/org.jooq/joor-java-8
    implementation 'org.jooq:joor-java-8:0.9.13'
    // https://mvnrepository.com/artifact/com.microsoft.signalr/signalr
    // implementation 'com.microsoft.signalr:signalr:1.0.0'
    implementation 'com.microsoft.signalr:signalr:5.0.9'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation 'org.apache.commons:commons-text:1.9'
    // Need this to search for VersionRange-annotated classes
    // https://mvnrepository.com/artifact/io.github.classgraph/classgraph
    implementation 'io.github.classgraph:classgraph:4.8.110'

    testFixturesApi("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testFixturesImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
    testFixturesApi "org.slf4j:slf4j-jdk14:$slf4jVersion"
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    testFixturesApi 'io.jsonwebtoken:jjwt:0.9.1'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    testFixturesApi 'commons-io:commons-io:2.6'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    testFixturesApi 'org.apache.commons:commons-lang3:3.8.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    testFixturesApi "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    testFixturesImplementation 'org.apache.commons:commons-compress:1.20'
    // https://mvnrepository.com/artifact/org.tukaani/xz
    testFixturesImplementation 'org.tukaani:xz:1.9'
}

processResources {
    def localVersionDetails = [
            'gitHash' : versionDetails.gitHash,
            'gitHashFull' : versionDetails.gitHashFull,
            'branchName' : versionDetails.branchName
    ]
    filesMatching("**/build.properties") {
        expand(localVersionDetails)
    }
}
jar {
    // See https://www.jenkins.io/blog/2018/01/13/jep-200/
    manifest {
        attributes 'Jenkins-ClassFilter-Whitelisted': 'true'
    }
}
